import * as React from 'react';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import BottomNavigation from '@mui/material/BottomNavigation';
import BottomNavigationAction from '@mui/material/BottomNavigationAction';
import RestoreIcon from '@mui/icons-material/Restore';
import FavoriteIcon from '@mui/icons-material/Favorite';
import ArchiveIcon from '@mui/icons-material/Archive';
import Paper from '@mui/material/Paper';
import List from '@mui/material/List';
import ListItemButton from '@mui/material/ListItemButton';
import ListItemAvatar from '@mui/material/ListItemAvatar';
import ListItemText from '@mui/material/ListItemText';
import Avatar from '@mui/material/Avatar';
import Typography from '@mui/material/Typography';

function refreshMessages() {
   const getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));

   return Array.from(new Array(30)).map(
      () => messageExamples[getRandomInt(messageExamples.length)]
   );
}

export default function FixedBottomNavigation() {
   const [value, setValue] = React.useState(0);
   const ref = React.useRef(null);
   const [messages, setMessages] = React.useState(() => refreshMessages());

   React.useEffect(() => {
      ref.current.ownerDocument.body.scrollTop = 0;
      setMessages(refreshMessages());
   }, [value, setMessages]);

   return (
      <Box
         sx={{
            pb: 9,
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            backgroundColor: '#f9f9f9',
            minHeight: '100vh',
         }}
         ref={ref}
      >
         <CssBaseline />

         <Typography
            variant="h4"
            sx={{
               mt: 3,
               mb: 4,
               fontWeight: 700,
               color: '#333',
               textAlign: 'center',
            }}
         >
            Xabarlar roâ€˜yxati
         </Typography>

         <Box
            sx={{
               width: '100%',
               maxWidth: 1400,
               mx: 'auto',
               backgroundColor: 'white',
               borderRadius: 3,
               boxShadow: 3,
               p: 2,
            }}
         >
            <List>
               {messages.map(({ primary, secondary, person }, index) => (
                  <ListItemButton
                     key={index + person}
                     sx={{
                        borderRadius: 2,
                        mb: 1,
                        transition: '0.3s',
                        '&:hover': { backgroundColor: '#f1f1f1' },
                     }}
                  >
                     <ListItemAvatar>
                        <Avatar alt="Profile Picture" src={person} />
                     </ListItemAvatar>
                     <ListItemText
                        primary={primary}
                        secondary={secondary}
                        primaryTypographyProps={{ fontWeight: 600 }}
                     />
                  </ListItemButton>
               ))}
            </List>
         </Box>

         <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>
            <BottomNavigation
               showLabels
               value={value}
               onChange={(event, newValue) => {
                  setValue(newValue);
               }}
            >
               <BottomNavigationAction label="Recents" icon={<RestoreIcon />} />
               <BottomNavigationAction label="Favorites" icon={<FavoriteIcon />} />
               <BottomNavigationAction label="Archive" icon={<ArchiveIcon />} />
            </BottomNavigation>
         </Paper>
      </Box>
   );
}

const messageExamples = [
   {
      primary: 'Brunch this week?',
      secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: 'https://randomuser.me/api/portraits/men/32.jpg',
   },
   {
      primary: 'Birthday Gift',
      secondary:
         'Do you have a suggestion for a good present for John on his work anniversary?',
      person: 'https://randomuser.me/api/portraits/women/65.jpg',
   },
   {
      primary: 'Recipe to try',
      secondary: 'Trying out this new BBQ recipe, I think it might be amazing!',
      person: 'https://randomuser.me/api/portraits/men/47.jpg',
   },
   {
      primary: 'Yes!',
      secondary: 'I have the tickets to ReactConf this year!',
      person: 'https://randomuser.me/api/portraits/women/12.jpg',
   },
   {
      primary: "Doctor's Appointment",
      secondary: 'My doctor appointment was rescheduled for next Saturday.',
      person: 'https://randomuser.me/api/portraits/men/53.jpg',
   },
   {
      primary: 'Discussion',
      secondary: 'Menus generated by the bottom app bar open as bottom sheets.',
      person: 'https://randomuser.me/api/portraits/women/18.jpg',
   },
];
